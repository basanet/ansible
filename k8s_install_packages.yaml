- name: install containerd
  hosts: host
  collections:
    - community.docker
  tasks:
    - name: Add the overlay and br_netfilter modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - "overlay"
        - "br_netfilter"
        
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true
        
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - gnupg
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Google GPG apt Key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes GPG apt Key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Add Kubernetes Repository
      apt_repository:
        repo: deb https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /
        state: present

    - name: Update apt and install containerd
      apt:
        name: containerd.io
        state: latest
        update_cache: true
        
    - name: Ensure containerd is started and enabled at boot.
      service:
        name: containerd
        state: started
        enabled: true

    - name: Default containerd config
      shell: 'containerd config default > /etc/containerd/config.toml'

    - name: Disable swap
      shell:
        cmd: |
          swapoff -a
      args:
        executable: /bin/bash

    - name: Remove Swap from fstab
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: Install kubernetes packages
      apt:
        pkg:
          - kubeadm
          - kubelet
          - kubectl
          - kubernetes-cni
        state: latest
        update_cache: true

    - name: enable ip forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true
        
    - name: Ensure kubelet is started and enabled at boot.
      service:
        name: kubelet
        state: started
        enabled: true
      
    
    
      
    
        
